<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on AMKS</title>
    <link>https://www.amks.me/blog/</link>
    <description>Recent content in Blogs on AMKS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>amk © 2020</copyright>
    <lastBuildDate>Tue, 19 Jan 2021 13:29:13 -0800</lastBuildDate>
    
	<atom:link href="https://www.amks.me/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I Learned Every Way to Multiply Two Numbers</title>
      <link>https://www.amks.me/blog/multiply/</link>
      <pubDate>Tue, 19 Jan 2021 13:29:13 -0800</pubDate>
      
      <guid>https://www.amks.me/blog/multiply/</guid>
      <description>In 2019, we apparently perfected multiplication. This news may be as shocking to you as it was to me. There&amp;rsquo;s more than one way to multiply?
There is indeed. In fact, there are about a dozen or so distinct ways of multiplication taught across the world. They boil down to 5 methods, since many approaches use different aesthetics but the same core principle. This week, I endeavored to learn every way to multiply numbers.</description>
    </item>
    
    <item>
      <title>Fall 2020 Retrospective</title>
      <link>https://www.amks.me/blog/fall20/</link>
      <pubDate>Mon, 14 Dec 2020 14:35:06 -0800</pubDate>
      
      <guid>https://www.amks.me/blog/fall20/</guid>
      <description>For anyone reading this in the distant future, hello! This article was written in the strange times of the coronavirus. All of humanity has been socially isolated and &amp;ldquo;working from home&amp;rdquo; for over nine months at present time. Dystopia is dreadfully boring.
No matter! There are still things that happened this semester. He&amp;rsquo;s a quick summary of what happened in the fall of 2020. Read about what I&amp;rsquo;m currently doing.</description>
    </item>
    
    <item>
      <title>Recreating Promises in Javascript</title>
      <link>https://www.amks.me/blog/promises/</link>
      <pubDate>Tue, 08 Dec 2020 18:02:07 -0800</pubDate>
      
      <guid>https://www.amks.me/blog/promises/</guid>
      <description>The Promise class is one of the most notoriously black-boxed tools in Javascript. How does the promise class manage asynchronicity, when Javascript is single-threaded?
I made a small Promise class to try to understand. The complete implementation is at the end of this article.
This article assumes some familiarity with the concept of Promises. If you&amp;rsquo;re unfamiliar with Promises, I&amp;rsquo;d highly consider checking out this wonderful guide.
The Specification To focus on core concepts, we&amp;rsquo;ll assume that our Promises always resolve and return a value.</description>
    </item>
    
    <item>
      <title>The React Breakdown, Part I</title>
      <link>https://www.amks.me/blog/react1/</link>
      <pubDate>Tue, 08 Dec 2020 17:02:40 -0800</pubDate>
      
      <guid>https://www.amks.me/blog/react1/</guid>
      <description>This series of notes was used to teach students at Berkeley in the fall of 2020.
Unlike many other tutorials across the internet, this tutorial uses a bottom-up approach to React, going through the basics of different react functionalities before implementing them. It pulls back the layer of abstraction around React tools to deeply understand how they work.
What is React? React is a declarative, efficient, and flexible JavaScript library for building user interfaces.</description>
    </item>
    
    <item>
      <title>Making My Own Clipboard</title>
      <link>https://www.amks.me/blog/clipboard/</link>
      <pubDate>Sat, 07 Nov 2020 05:31:37 -0800</pubDate>
      
      <guid>https://www.amks.me/blog/clipboard/</guid>
      <description>Last weekend, I made a private clipboard. You can play with it here and I explain the process of making it in this blog!
⌘+C. ⌘+V. I do this way too many times a day, at an instinctual level. I don&amp;rsquo;t know when I learned how to copy and paste, but it certainly feels like I&amp;rsquo;ve known it all my life. The clipboard is probably the most widely used shortcut on the keyboard.</description>
    </item>
    
    <item>
      <title>How To Practise For CS Classes</title>
      <link>https://www.amks.me/blog/cs61a-practise/</link>
      <pubDate>Wed, 21 Oct 2020 14:52:27 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/cs61a-practise/</guid>
      <description>So, you wanna do practise questions? That&amp;rsquo;s great! I&amp;rsquo;m glad you&amp;rsquo;re actively engaging with the material and trying to do better.
However, there&amp;rsquo;s a pitfall to doing practise questions that I want you to be aware of.
Just Doing Practise Questions Is Harmful The way I started doing practise tests was quite straightforward. Print the exam, do it best I could, then check answers for where there were mistakes. Try not to make those mistakes again.</description>
    </item>
    
    <item>
      <title>Types of APIs</title>
      <link>https://www.amks.me/blog/apis/</link>
      <pubDate>Sat, 17 Oct 2020 17:49:51 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/apis/</guid>
      <description>If you&amp;rsquo;re at all interested in back-end web development, then you&amp;rsquo;ve heard of APIs –– but what are they really?
What are APIs? Imagine that we want to make available data about movies. getLastBlockbuster() returns the last big cinema hit, movieRating(&#39;Parasite&#39;) returns the imdb rating of the movie Parasite, and so on. This would be a very cool tool to give movie enthusiasts! So you go ahead and write this. How do we make this available to users?</description>
    </item>
    
    <item>
      <title>How Does Control Flow In Python?</title>
      <link>https://www.amks.me/blog/cs61a-control/</link>
      <pubDate>Sat, 17 Oct 2020 17:33:05 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/cs61a-control/</guid>
      <description>This is written for the class CS61A: The Structure and Interpretation of Computer Programs at UC Berkeley.
To understand everything that 61A is trying to teach you, its important to understand the fundamental idea that everything is based on –– how are Python programs executed?
Direct Control Flow In the simplest of functions, control simply flows downward.
a = 3 print(a) # prints 3 The reason this works is because the control goes up to down –– 3 is bound to a, and then looked up in line 2.</description>
    </item>
    
    <item>
      <title>Summer 2020 Retrospective</title>
      <link>https://www.amks.me/blog/summer20/</link>
      <pubDate>Sat, 22 Aug 2020 09:04:49 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/summer20/</guid>
      <description>This is a quick summary of what I did last summer, with some insights thrown in for good measure. Here&amp;rsquo;s what I&amp;rsquo;m doing right now.
Education I took CS70: Discrete Math and Probability Theory! Taking the class in the summer was challenging and forced me to really consider what I wanted to spend time doing –– making tough decisions about attending discussions, lectures and so on.
I also took CS375: Teaching Techniques for Computer Science, a discussion-based class for first-time teachers.</description>
    </item>
    
    <item>
      <title>Pure CSS Solution For Dark Mode</title>
      <link>https://www.amks.me/blog/dark-mode-css/</link>
      <pubDate>Tue, 16 Jun 2020 20:50:10 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/dark-mode-css/</guid>
      <description>If you&amp;rsquo;re using any node-based framework, you can use the package I created instead. I also wrote about it.
No Toggle Solution CSS provides a media query to let your website match the preference of the user.
/* Other Styles Here */ ... @media (prefers-color-scheme: dark) { h1 { color: white; } /* Other Selector Style Updates */ ... } Toggle Solution Fundamental Idea: use the CSS + selector to match sibling items with a checkbox label.</description>
    </item>
    
    <item>
      <title>Building A Dark Mode NPM Package</title>
      <link>https://www.amks.me/blog/dark-mode/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.amks.me/blog/dark-mode/</guid>
      <description>I&amp;rsquo;ve always been a light mode person. I like the cleanliness of it.
But I&amp;rsquo;ve recently developed a fascination with dark mode. It&amp;rsquo;s a feature which has been getting progressively more accepted into the internet development community. The following products went low light in the last couple years: apple, facebook, youtube, instagram, twitter, gmail, slack, soundcloud, google chrome. Here&amp;rsquo;s a convenient exhaustive list.
So I decided to add dark mode to one of my websites that I knew would get a lot of traction.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://www.amks.me/blog/hullo/</link>
      <pubDate>Thu, 11 Jun 2020 21:18:11 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/hullo/</guid>
      <description>What can I say? I&amp;rsquo;m big on tradition.
Python def main(): print &amp;quot;Hello world!&amp;quot; if __name__ == __main__: main() Java public class Start { public static void main(String args[]) { System.out.println(&amp;quot;Hello world!&amp;quot;) } } HTML &amp;lt;HTML&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt; Start &amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt; Hello world! &amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/HTML&amp;gt; Javascript const start = () =&amp;gt; (console.log(&amp;quot;Hello world!&amp;quot;)) React JS from &#39;react&#39; import React class Start extends React.Component { render() { return ( &amp;lt;p&amp;gt; Hello world!</description>
    </item>
    
  </channel>
</rss>