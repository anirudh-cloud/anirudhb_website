<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cs61a on AMKS</title>
    <link>https://www.amks.me/tags/cs61a/</link>
    <description>Recent content in cs61a on AMKS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>amk © 2020</copyright>
    <lastBuildDate>Wed, 21 Oct 2020 14:52:27 -0700</lastBuildDate>
    
	<atom:link href="https://www.amks.me/tags/cs61a/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Practise For CS Classes</title>
      <link>https://www.amks.me/blog/cs61a-practise/</link>
      <pubDate>Wed, 21 Oct 2020 14:52:27 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/cs61a-practise/</guid>
      <description>So, you wanna do practise questions? That&amp;rsquo;s great! I&amp;rsquo;m glad you&amp;rsquo;re actively engaging with the material and trying to do better.
However, there&amp;rsquo;s a pitfall to doing practise questions that I want you to be aware of.
Just Doing Practise Questions Is Harmful The way I started doing practise tests was quite straightforward. Print the exam, do it best I could, then check answers for where there were mistakes. Try not to make those mistakes again.</description>
    </item>
    
    <item>
      <title>How Does Control Flow In Python?</title>
      <link>https://www.amks.me/blog/cs61a-control/</link>
      <pubDate>Sat, 17 Oct 2020 17:33:05 -0700</pubDate>
      
      <guid>https://www.amks.me/blog/cs61a-control/</guid>
      <description>This is written for the class CS61A: The Structure and Interpretation of Computer Programs at UC Berkeley.
To understand everything that 61A is trying to teach you, its important to understand the fundamental idea that everything is based on –– how are Python programs executed?
Direct Control Flow In the simplest of functions, control simply flows downward.
a = 3 print(a) # prints 3 The reason this works is because the control goes up to down –– 3 is bound to a, and then looked up in line 2.</description>
    </item>
    
  </channel>
</rss>